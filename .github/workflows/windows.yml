name: Build & Test @ Windows

on:

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:

  build-and-test-at-windows:

    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        build-type: [ debug, release ]

    steps:

      - name: Checkout the Code
        uses: actions/checkout@v4

      - run: rustup toolchain install stable --profile minimal

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ matrix.job.os }}

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.build-type }}-${{ github.ref_name }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Build (${{ matrix.build-type }})
        run: |
          if ("${{ matrix.build-type }}" -eq "release") {
            cargo build --workspace --release --verbose
            cargo build --workspace --release --verbose --features denoiser
          } else {
            cargo build --workspace --verbose
            cargo build --workspace --verbose --features denoiser
          }

      - name: Run Tests (${{ matrix.build-type }})
        run: |
          set RUST_BACKTRACE=full
          if ("${{ matrix.build-type }}" -eq "release") {
            cargo test -p library --release --verbose -- --nocapture
          } else {
            cargo test -p library --verbose --lib -- --nocapture
          }

      - name: Upload test output artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-output-windows-${{ matrix.build-type }}
          path: library/tests/out/
          if-no-files-found: ignore
          retention-days: 7