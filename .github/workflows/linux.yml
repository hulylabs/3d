name: Build & Test @ Linux

on:

  push:
    branches:
      - '*'

  pull_request:
    branches:
      - '*'

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:

  build-and-test-at-linux:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        build-type: [debug, release]

    steps:
      - name: Checkout the Code
        uses: actions/checkout@v4

      - name: Install Vulkan Software Implementation
        run: |
          sudo apt update
          sudo apt install -y libvulkan1 mesa-vulkan-drivers

      - run: rustup toolchain install stable --profile minimal

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ matrix.job.os }}

#      Uncomment this in case of local running via 'act'
#      - name: Setup Rust
#        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.build-type }}-${{ github.ref_name }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Build (${{ matrix.build-type }})
        run: |
          if [ "${{ matrix.build-type }}" = "release" ]; then
            cargo build --workspace --release --verbose
          else
            cargo build --workspace --verbose
          fi

      - name: Run Tests (${{ matrix.build-type }})
        run: |
          if [ "${{ matrix.build-type }}" = "release" ]; then
            cargo test -p library --release --verbose -- --skip tests::render
          else
            cargo test -p library --verbose -- --skip tests::render
          fi

      - name: Upload test output artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-output-${{ matrix.build-type }}
          path: library/tests/out/
          if-no-files-found: ignore
          retention-days: 7

      - name: Install cargo-tarpaulin
        if: matrix.build-type == 'debug'
        run: cargo install cargo-tarpaulin

      - name: Generate Coverage Report
        if: matrix.build-type == 'debug'
        run: |
          cargo tarpaulin \
            --verbose \
            --workspace \
            --out Html \
            --out Stdout \
            --output-dir coverage \
            -- --skip tests::render

      - name: Upload coverage reports as artifacts
        if: matrix.build-type == 'debug'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage/